pp_data %>%
group_by(isin) %>%
transmute(isin,date,
month_1 =  date %m+% months(1),
MKT_CAP)
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
month_1 =  date %m+% months(1),
MKT_CAP)
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "month_1"),
suffix = c("","_1"))
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "month_1"),
suffix = c("","_1")) %>% arrange(isin,date)
pp_data %>%
group_by(isin) %>%
transmute(isin,
month_1 =  date %m+% months(1),
MKT_CAP)
pp_data %>%
group_by(isin) %>%
transmute(isin, date,
month_1 =  date %m+% months(1),
MKT_CAP)
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "month_1"),
suffix = c("","_1"))
pp_data %>%
group_by(isin) %>%
transmute(isin, date,
month_1 =  date %m+% months(1),
MKT_CAP)
pp_data %>%
group_by(isin) %>%
transmute(isin, date,
date_lag = lag(date,4),
month_1 =  date %m+% months(1),
MKT_CAP)
pp_data %>%
group_by(isin) %>%
transmute(isin, date,
date_lag = lead(date,4),
month_1 =  date %m+% months(1),
MKT_CAP)
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin, date,
date_lag_1 = lead(date,4),
month_1 =  date %m+% months(1),
MKT_CAP)
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lah"),
suffix = c("","_1")) %>% arrange(isin,date)
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1"),
suffix = c("","_1")) %>% arrange(isin,date)
data_weekly
pp_data
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1")) %>% arrange(isin,date)
pp_data %>%
group_by(isin) %>%
transmute(isin, date,
date_lag_1 = lead(date,4),
month_1 =  date %m+% months(1),
MKT_CAP)
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_lag_1 = lead(date,4),
month_1 =  date %m+% months(1),
MKT_CAP)
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1")) %>% arrange(isin,date)
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1")) %>% arrange(isin,date)
pp_data
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1"),
suffix = c("", "_1")) %>% arrange(isin,date)
pp_data
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event)
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_lag_1 = lead(date,4),
month_1 =  date %m+% months(1),
MKT_CAP)
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_lag_1 = lead(date,4),
MKT_CAP)
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1"),
suffix = c("", "_1")) %>% arrange(isin,date)
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1"),
suffix = c("", "_1")) %>% arrange(isin,date)
pp_data %>%
mutate(momentum_lag = MKT_CAP / MKT_CAP_1,
size_lag = log(MKT_CAP)
) %>%
drop_na(contains("lag"))
data_portfolios
data_portfolios = pp_data %>%
mutate(momentum_lag = MKT_CAP / MKT_CAP_1,
size_lag = log(MKT_CAP)
) %>%
drop_na(contains("lag"))
data_portfolios
data_portfolios = pp_data %>%
transmute(
date,isin,ret,pos_event,neg_event,MKT_CAP,
momentum_lag = MKT_CAP / MKT_CAP_1,
size_lag = log(MKT_CAP)
) %>%
drop_na(contains("lag"))
data_portfolios
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event) %>%
group_by(isin) %>%
mutate(mktcap_lag = lag(MKT_CAP))
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_lag_1 = lead(date,4),
MKT_CAP)
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_lag_1 = lead(date,4),
MKT_CAP)
pp_monthly_lags
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1"),
suffix = c("", "_1")) %>% arrange(isin,date)
pp_data
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_lag_1 = lead(date,5),
MKT_CAP)
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1"),
suffix = c("", "_1")) %>% arrange(isin,date)
pp_data
data_portfolios = pp_data %>%
mutate(
momentum_lag = MKT_CAP / MKT_CAP_1,
size_lag = log(MKT_CAP)
) %>%
drop_na(contains("lag"))
data_portfolios
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event) %>%
group_by(isin) %>%
mutate(mktcap_lag = lag(MKT_CAP))
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_lag_1 = lead(date,5),
MKT_CAP)
pp_monthly_lags
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1"),
suffix = c("", "_1")) %>% arrange(isin,date)
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_lag_1"),
suffix = c("", "_1")) %>% arrange(isin,date)
pp_data
data_portfolios = pp_data %>%
mutate(
momentum_lag = MKT_CAP / MKT_CAP_1,
size_lag = log(MKT_CAP)
) %>%
drop_na(contains("lag"))
data_portfolios
data_portfolios %>%
group_by(date) %>%
mutate(
n = n(),
relative_mktcap = mktcap_lag / sum(mktcap_lag),
across(contains("lag"), ~ (. - mean(.)) / sd(.))
) %>%
ungroup() %>%
select(-mktcap_lag)
17449880000/16719220000
pp_data %>%
mutate(
momentum_lag = MKT_CAP / MKT_CAP_1,
size_lag = log(MKT_CAP)
)
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event) %>%
group_by(isin) %>%
mutate(mktcap_lag = lag(MKT_CAP))
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_5 = lead(date,5),
MKT_CAP)
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_5"),
suffix = c("", "_5")) %>% arrange(isin,date)
pp_data
data_portfolios = pp_data %>%
mutate(
momentum_lag = mktcap_lag / MKT_CAP_1,
size_lag = log(mktcap_lag)
) %>%
drop_na(contains("lag"))
pp_data
data_portfolios = pp_data %>%
mutate(
momentum_lag = mktcap_lag / MKT_CAP_5,
size_lag = log(mktcap_lag)
) %>%
drop_na(contains("lag"))
data_portfolios
data_portfolios = data_portfolios %>%
group_by(date) %>%
mutate(
n = n(),
relative_mktcap = mktcap_lag / sum(mktcap_lag),
across(contains("lag"), ~ (. - mean(.)) / sd(.))
) %>%
ungroup() %>%
select(-mktcap_lag)
data_portfolios
data_portfolios = pp_data %>%
mutate(
momentum_lag = mktcap_lag / MKT_CAP_5,
size_lag = log(mktcap_lag)
) %>%
drop_na(contains("lag"))
data_portfolios %>%
group_by(date) %>%
mutate(
n = n(),
relative_mktcap = mktcap_lag / sum(mktcap_lag),
across(contains("lag"), ~ (. - mean(.)) / sd(.))
)
data_portfolios
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event) %>%
group_by(isin) %>%
mutate(mktcap_lag = lag(MKT_CAP))
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event) %>%
group_by(isin) %>%
mutate(mktcap_lag = lag(MKT_CAP))
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_5 = lead(date,5),
MKT_CAP)
pp_data %>%
mutate(
momentum_lag = mktcap_lag / MKT_CAP_5,
size_lag = log(mktcap_lag)
)
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event) %>%
group_by(isin) %>%
mutate(mktcap_lag = lag(MKT_CAP))
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_5 = lead(date,5),
MKT_CAP)
pp_monthly_lags
pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_5"),
suffix = c("", "_5"))
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_5"),
suffix = c("", "_5"))
pp_data %>%
mutate(
momentum_lag = mktcap_lag / MKT_CAP_5,
size_lag = log(mktcap_lag)
)
17260768000 / 16336698000
16719220000 / 17058762000
17441284000 / 18167646000
data_portfolios = pp_data %>%
mutate(
momentum_lag = mktcap_lag / MKT_CAP_5,
size_lag = log(mktcap_lag)
) %>%
drop_na(contains("lag"))
data_portfolios
data_portfolios %>%
group_by(date) %>%
mutate(
n = n(),
relative_mktcap = mktcap_lag / sum(mktcap_lag),
across(contains("lag"), ~ (. - mean(.)) / sd(.))
)
data_portfolios = data_portfolios %>%
group_by(date) %>%
mutate(
n = n(),
relative_mktcap = mktcap_lag / sum(mktcap_lag),
across(contains("lag"), ~ (. - mean(.)) / sd(.))
) %>%
ungroup() %>%
select(-mktcap_lag)
sum(str_detect(
colnames(data_portfolios), "lag"
))
n_parameters <- sum(str_detect(
colnames(data_portfolios), "lag"
))
theta <- rep(1.5, n_parameters)
names(theta) <- colnames(data_portfolios)[str_detect(
colnames(data_portfolios), "lag"
)]
theta
source("functions.R")
weights <- compute_portfolio_weights(
theta,
data_portfolios,
value_weighting = TRUE,
allow_short_selling = FALSE
)
source("functions.R")
weights <- compute_portfolio_weights(
theta,
data_portfolios,
value_weighting = TRUE,
allow_short_selling = FALSE
)
weights
2.795004e-03
weights %>% filter(date == '2018-02-09')
weights %>% filter(date == '2018-02-09') %>% summarise(sum(weight_tilt))
(1 + r)^(1 - gamma) / (1 - gamma)
power_utility <- function(r, gamma = 5) {
(1 + r)^(1 - gamma) / (1 - gamma)
}
source("functions.R")
evaluate_portfolio(weights) |>
print(n = Inf)
eu_3factors_daily <- read.csv("C:/Users/Marti/OneDrive - University of Copenhagen/KU/Speciale/Data behandling/Europe_3_Factors_Daily.csv", sep = ",") %>%
transmute(date = as.Date(ymd(X)),
mkt_excess = Mkt.RF/100,
SMB = SMB/100,
HML = HML/100,
RF = RF/100)
source("functions.R")
evaluate_portfolio(weights) |>
print(n = Inf)
weights <- compute_portfolio_weights(
theta,
data_portfolios,
value_weighting = TRUE,
allow_short_selling = TRUE
)
power_utility <- function(r, gamma = 5) {
(1 + r)^(1 - gamma) / (1 - gamma)
}
evaluate_portfolio(weights) |>
print(n = Inf)
weights <- compute_portfolio_weights(
theta,
data_portfolios,
value_weighting = TRUE,
allow_short_selling = FALSE
)
power_utility <- function(r, gamma = 5) {
(1 + r)^(1 - gamma) / (1 - gamma)
}
evaluate_portfolio(weights) |>
print(n = Inf)
source("functions.R")
optimal_theta <- optim(
par = theta,
compute_objective_function,
objective_measure = "Expected utility",
data = data_portfolios,
value_weighting = TRUE,
allow_short_selling = FALSE
)
optimal_theta$par
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event) %>%
group_by(isin) %>%
mutate(mktcap_lag = lag(MKT_CAP))
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_5 = lead(date,15),
MKT_CAP)
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_5"),
suffix = c("", "_5"))
data_portfolios = pp_data %>%
mutate(
momentum_lag = mktcap_lag / MKT_CAP_5,
size_lag = log(mktcap_lag)
) %>%
drop_na(contains("lag"))
data_portfolios = data_portfolios %>%
group_by(date) %>%
mutate(
n = n(),
relative_mktcap = mktcap_lag / sum(mktcap_lag),
across(contains("lag"), ~ (. - mean(.)) / sd(.))
) %>%
ungroup() %>%
select(-mktcap_lag)
n_parameters <- sum(str_detect(
colnames(data_portfolios), "lag"
))
theta <- rep(1.5, n_parameters)
names(theta) <- colnames(data_portfolios)[str_detect(
colnames(data_portfolios), "lag"
)]
weights <- compute_portfolio_weights(
theta,
data_portfolios,
value_weighting = TRUE,
allow_short_selling = FALSE
)
power_utility <- function(r, gamma = 5) {
(1 + r)^(1 - gamma) / (1 - gamma)
}
evaluate_portfolio(weights) |>
print(n = Inf)
optimal_theta <- optim(
par = theta,
compute_objective_function,
objective_measure = "Expected utility",
data = data_portfolios,
value_weighting = TRUE,
allow_short_selling = FALSE
)
evaluate_portfolio(weights) |>
print(n = Inf)
optimal_theta$par
pp_data = long_term_data_weekly %>% select(date, isin, ret, MKT_CAP, pos_event,neg_event) %>%
group_by(isin) %>%
mutate(mktcap_lag = lag(MKT_CAP))
pp_monthly_lags = pp_data %>%
group_by(isin) %>%
transmute(isin,
date_5 = lead(date,5),
MKT_CAP)
pp_data = pp_data %>%
inner_join(pp_monthly_lags,
by = c("isin","date" = "date_5"),
suffix = c("", "_5"))
data_portfolios = pp_data %>%
mutate(
momentum_lag = mktcap_lag / MKT_CAP_5,
size_lag = log(mktcap_lag)
) %>%
drop_na(contains("lag"))
data_portfolios
data_portfolios = data_portfolios %>%
group_by(date) %>%
mutate(
n = n(),
relative_mktcap = mktcap_lag / sum(mktcap_lag),
across(contains("lag"), ~ (. - mean(.)) / sd(.))
) %>%
ungroup() %>%
select(-mktcap_lag)
n_parameters <- sum(str_detect(
colnames(data_portfolios), "lag"
))
theta <- rep(1.5, n_parameters)
names(theta) <- colnames(data_portfolios)[str_detect(
colnames(data_portfolios), "lag"
)]
weights <- compute_portfolio_weights(
theta,
data_portfolios,
value_weighting = TRUE,
allow_short_selling = FALSE
)
power_utility <- function(r, gamma = 5) {
(1 + r)^(1 - gamma) / (1 - gamma)
}
evaluate_portfolio(weights) |>
print(n = Inf)
optimal_theta <- optim(
par = theta,
compute_objective_function,
objective_measure = "Average return",
data = data_portfolios,
value_weighting = TRUE,
allow_short_selling = FALSE
)
optimal_theta$par
optimal_theta
